[{"C:\\Users\\Acer\\Workspace\\React-Course\\invest-with-tribe\\date-filter\\front-end\\src\\index.js":"1","C:\\Users\\Acer\\Workspace\\React-Course\\invest-with-tribe\\date-filter\\front-end\\src\\reportWebVitals.js":"2","C:\\Users\\Acer\\Workspace\\React-Course\\invest-with-tribe\\date-filter\\front-end\\src\\App.js":"3","C:\\Users\\Acer\\Workspace\\React-Course\\invest-with-tribe\\date-filter\\front-end\\src\\Components\\Assignment1.jsx":"4","C:\\Users\\Acer\\Workspace\\React-Course\\invest-with-tribe\\date-filter\\front-end\\src\\Components\\SignUp.jsx":"5","C:\\Users\\Acer\\Workspace\\React-Course\\invest-with-tribe\\date-filter\\front-end\\src\\Components\\Index.jsx":"6","C:\\Users\\Acer\\Workspace\\React-Course\\invest-with-tribe\\date-filter\\front-end\\src\\Components\\Header.jsx":"7","C:\\Users\\Acer\\Workspace\\React-Course\\invest-with-tribe\\date-filter\\front-end\\src\\store.js":"8","C:\\Users\\Acer\\Workspace\\React-Course\\invest-with-tribe\\date-filter\\front-end\\src\\reducers\\userReducer.js":"9","C:\\Users\\Acer\\Workspace\\React-Course\\invest-with-tribe\\date-filter\\front-end\\src\\constants\\userConstants.js":"10","C:\\Users\\Acer\\Workspace\\React-Course\\invest-with-tribe\\date-filter\\front-end\\src\\Components\\actions\\userActions.js":"11"},{"size":563,"mtime":1643882637772,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1643518357468,"results":"14","hashOfConfig":"13"},{"size":770,"mtime":1643691759469,"results":"15","hashOfConfig":"13"},{"size":122,"mtime":1643527792953,"results":"16","hashOfConfig":"13"},{"size":3496,"mtime":1643891152231,"results":"17","hashOfConfig":"13"},{"size":3888,"mtime":1643891114784,"results":"18","hashOfConfig":"13"},{"size":1559,"mtime":1643891257241,"results":"19","hashOfConfig":"13"},{"size":566,"mtime":1643883385151,"results":"20","hashOfConfig":"13"},{"size":1018,"mtime":1643883284663,"results":"21","hashOfConfig":"13"},{"size":342,"mtime":1643891714276,"results":"22","hashOfConfig":"13"},{"size":1777,"mtime":1643891709207,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"j1dbjf",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Acer\\Workspace\\React-Course\\invest-with-tribe\\date-filter\\front-end\\src\\index.js",[],[],"C:\\Users\\Acer\\Workspace\\React-Course\\invest-with-tribe\\date-filter\\front-end\\src\\reportWebVitals.js",[],[],["59","60"],"C:\\Users\\Acer\\Workspace\\React-Course\\invest-with-tribe\\date-filter\\front-end\\src\\App.js",[],[],"C:\\Users\\Acer\\Workspace\\React-Course\\invest-with-tribe\\date-filter\\front-end\\src\\Components\\Assignment1.jsx",[],[],"C:\\Users\\Acer\\Workspace\\React-Course\\invest-with-tribe\\date-filter\\front-end\\src\\Components\\SignUp.jsx",["61"],[],"import React, {useState} from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Paper from '@mui/material/Paper';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport {ReactComponent as SignUp} from './assets/SignUp.svg'\r\nimport { makeStyles } from '@mui/styles';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { register } from './actions/userActions';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst theme = createTheme();\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      height: '88vh', paddingBottom: 185, marginTop: 10\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      height: '90vh', paddingBottom: 250, marginTop: 5\r\n    },\r\n  },\r\n});\r\n\r\n\r\nexport default function SignInSide() {\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userRegister = useSelector(state => state.userRegister)\r\n  const {userInfo} = userRegister\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    dispatch(register(email, password))\r\n    navigate(`/`);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Grid container component=\"main\" className={classes.root}>\r\n        <CssBaseline />\r\n        <Grid\r\n          item\r\n          xs={false}\r\n          sm={4}\r\n          md={7}\r\n        >\r\n          <SignUp style={{maxWidth: 500}} />\r\n        </Grid>\r\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <Box\r\n            sx={{\r\n              my: 8,\r\n              mx: 4,\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign Up\r\n            </Typography>\r\n            <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 1 }}>\r\n              <TextField\r\n                margin=\"normal\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n              />\r\n              <TextField\r\n                margin=\"normal\"\r\n                required\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={{ mt: 3, mb: 2 }}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </ThemeProvider>\r\n  );\r\n}","C:\\Users\\Acer\\Workspace\\React-Course\\invest-with-tribe\\date-filter\\front-end\\src\\Components\\Index.jsx",[],[],"C:\\Users\\Acer\\Workspace\\React-Course\\invest-with-tribe\\date-filter\\front-end\\src\\Components\\Header.jsx",[],[],"C:\\Users\\Acer\\Workspace\\React-Course\\invest-with-tribe\\date-filter\\front-end\\src\\store.js",[],[],"C:\\Users\\Acer\\Workspace\\React-Course\\invest-with-tribe\\date-filter\\front-end\\src\\reducers\\userReducer.js",[],[],"C:\\Users\\Acer\\Workspace\\React-Course\\invest-with-tribe\\date-filter\\front-end\\src\\constants\\userConstants.js",[],[],"C:\\Users\\Acer\\Workspace\\React-Course\\invest-with-tribe\\date-filter\\front-end\\src\\Components\\actions\\userActions.js",[],[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":41,"column":10,"nodeType":"68","messageId":"69","endLine":41,"endColumn":18},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'userInfo' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]