{"ast":null,"code":"import axios from \"axios\";\nimport { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS } from \"../../constants/userConstants\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    }); // localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response\n    });\n  }\n}; // export const logOut = () => (dispatch) => {\n//     localStorage.removeItem('userInfo')\n//     dispatch({\n//         type: USER_LOGOUT\n//     })\n//     dispatch({\n//         type: USER_DETAILS_RESET\n//     })\n//     dispatch({\n//         type: ORDER_LIST_MY_RESET\n//     })\n//     dispatch({\n//         type: USER_LIST_RESET\n//     })\n//     dispatch({\n//         type: RESET_CART_ITEM\n//     })\n// }\n\nexport const register = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    }); // localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Acer/Workspace/React-Course/invest-with-tribe/date-filter/front-end/src/Components/actions/userActions.js"],"names":["axios","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","login","email","password","dispatch","type","config","headers","data","post","payload","error","response","message","register"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,kBAA1B,EAA8CC,kBAA9C,EAAkEC,kBAAlE,EAAsFC,qBAAtF,EAA6GC,qBAA7G,QAA0I,+BAA1I;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAMC,QAAN,IAAmB;AACzD,MAAG;AACCA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAET;AADD,KAAD,CAAR;AAIA,UAAMU,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;AAMA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMd,KAAK,CAACe,IAAN,CAAW,iBAAX,EAA8B;AAACP,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAA9B,EAAiDG,MAAjD,CAArB;AAEAF,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAER,kBADD;AAELa,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR,CAbD,CAkBC;AACH,GAnBD,CAmBC,OAAMG,KAAN,EAAa;AACVP,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEV,eADD;AAELe,MAAAA,OAAO,EACHC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACEF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADtB,GAEEF,KAAK,CAACC;AALP,KAAD,CAAR;AAOH;AACJ,CA7BM,C,CA+BP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAME,QAAQ,GAAG,CAACZ,KAAD,EAAQC,QAAR,KAAqB,MAAMC,QAAN,IAAmB;AAC5D,MAAG;AACCA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEN;AADD,KAAD,CAAR;AAIA,UAAMO,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;AAMA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMd,KAAK,CAACe,IAAN,CAAW,YAAX,EAAyB;AAACP,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAzB,EAA4CG,MAA5C,CAArB;AAEAF,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEL,qBADD;AAELU,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKAJ,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAER,kBADD;AAELa,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR,CAlBD,CAuBC;AACH,GAxBD,CAwBC,OAAMG,KAAN,EAAa;AACVP,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEP,kBADD;AAELY,MAAAA,OAAO,EACHC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACEF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADtB,GAEEF,KAAK,CAACC;AALP,KAAD,CAAR;AAOH;AACJ,CAlCM","sourcesContent":["import axios from \"axios\"\r\nimport { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS } from \"../../constants/userConstants\"\r\n\r\nexport const login = (email, password) => async(dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST,\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post('api/users/login', {email, password}, config)\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        // localStorage.setItem('userInfo', JSON.stringify(data))\r\n    }catch(error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message\r\n                ? error.response.data.message \r\n                : error.response\r\n        })\r\n    }\r\n}\r\n\r\n// export const logOut = () => (dispatch) => {\r\n//     localStorage.removeItem('userInfo')\r\n//     dispatch({\r\n//         type: USER_LOGOUT\r\n//     })\r\n//     dispatch({\r\n//         type: USER_DETAILS_RESET\r\n//     })\r\n//     dispatch({\r\n//         type: ORDER_LIST_MY_RESET\r\n//     })\r\n//     dispatch({\r\n//         type: USER_LIST_RESET\r\n//     })\r\n//     dispatch({\r\n//         type: RESET_CART_ITEM\r\n//     })\r\n// }\r\n\r\nexport const register = (email, password) => async(dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST,\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post('/api/users', {email, password}, config)\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        // localStorage.setItem('userInfo', JSON.stringify(data))\r\n    }catch(error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: \r\n                error.response && error.response.data.message\r\n                ? error.response.data.message \r\n                : error.response\r\n        })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}